[pgbouncer]
logfile = /var/log/postgresql/pgbouncer.log
pidfile = /var/run/postgresql/pgbouncer.pid

listen_addr = *
listen_port = {{ pgbouncer_listen_port }}

unix_socket_dir = /var/run/postgresql

; any, trust, plain, crypt, md5
auth_type = {{ auth_type }}
auth_file = {{ pgbouncer_path }}/userlist.txt

; comma-separated list of users, who are allowed to change settings
admin_users = {{ pgbouncer_admin_stat_user }}

; comma-separated list of users who are just allowed to use SHOW command
stats_users = {{ pgbouncer_admin_stat_user }}

; When server connection is released back to pool:
;   session      - after client disconnects
;   transaction  - after transaction finishes
;   statement    - after statement finishes
; NOTE: We choose transaction as a pool mode from citus article https://www.citusdata.com/blog/2017/05/10/scaling-connections-in-postgres/
pool_mode = transaction

server_reset_query = DISCARD ALL

%include {{ pgbouncer_path }}/pgbouncer.database.ini

;;;
;;; Connection limits
;;;

; total number of clients that can connect
;max_client_conn = {{ max_connections }}

; default pool size.  20 is good number when transaction pooling
; is in use, in session pooling it needs to be the number of
; max clients you want to handle at any moment
; 20 is default value
;default_pool_size = 20 

; how many additional connection to allow in case of trouble
;reserve_pool_size = 5
